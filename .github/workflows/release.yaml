name: Release
on:
  workflow_dispatch:
    inputs:
      semver:
        required: true
        type: choice
        default: patch
        description: Semver options to bump version while releasing
        options:
          - patch
          - minor
          - major

env:
  IMAGE_NAME: deus-bot

jobs:
  bump:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      version: ${{ steps.bump.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Bump version
        id: bump
        run: |
          chmod +x ./.script/bump.sh
          ./.script/bump.sh ${{ inputs.semver }}
          echo ${{ steps.bump.outputs.version }}
        shell: bash

      - name: Update git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git reset --soft HEAD~1
          git add pom.xml
          git commit --reuse-message=ORIG_HEAD
          git push --force
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  install:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    needs: bump

    outputs:
      url: ${{ steps.getImageUrl.outputs.url }}

    steps:
      - uses: actions/checkout@v4

      - name: Pull new version
        run: git pull --rebase

      - name: Check new version
        run: |
          echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo $(mvn help:evaluate -Dexpression=revision -q -DforceStdout)

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build a container image from Spring Boot app using maven
        run: mvn spring-boot:build-image

      - name: Set image url output variable
        id: getImageUrl
        run: echo "url=ghcr.io/${GITHUB_REPOSITORY%/*}/${{ env.IMAGE_NAME }}:${{ needs.bump.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Tag docker image
        run: docker tag ${{ env.IMAGE_NAME }}:${{ needs.bump.outputs.version }} ${{ steps.getImageUrl.outputs.url }}

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Publish to GitHub Container Registry
        run: docker push ${{ steps.getImageUrl.outputs.url }}

  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    needs:
      - bump
      - install

    steps:
      - uses: ncipollo/release-action@v1
        with:
          body: Docker-image можно найти по [ссылке](https://${{ needs.install.outputs.url }})
          tag: v${{ needs.bump.outputs.version }}
          generateReleaseNotes: true

  deploy:
    runs-on: ubuntu-latest

    needs:
      - install
      - release

    env:
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}

    steps:
      - name: Deploy Spring Boot app docker image to onRender
        run: curl -X GET "${{ secrets.RENDER_DEPLOY_HOOK }}&imgURL=${{ needs.install.outputs.url }}"
